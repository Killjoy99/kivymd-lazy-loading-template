name: Build APK
on:
  push:
    branches:
      - build-android-app
  pull_request:
    branches:
      - build-android-app

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.buildozer
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}

      - name: Cache Android SDK, NDK, and Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android
            ~/.buildozer/android/platform/android-ndk-r23b  # Cache NDK
          key: ${{ runner.os }}-android-sdk

      - name: Install Buildozer dependencies
        run: |
          if [ ! -d ~/.buildozer ]; then
            sudo apt update
            sudo apt install -y git zip unzip python3-pip autoconf libtool pkg-config \
              zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake ccache \
              libffi-dev libssl-dev automake
            python3 -m pip install --user --upgrade Cython virtualenv
            python3 -m pip install --user --upgrade buildozer # Use stable version
          fi

      - name: Install Python dependencies
        run: |
          python3 -m pip install --user -r requirements.txt  # Adjust path if needed

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build APK with Buildozer
        run: |
          export PATH=$PATH:~/.local/bin
          cd src
          yes | buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: src/bin/*.apk
